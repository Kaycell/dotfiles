alias vim="vi"
alias ls="ls --color"

# Gitlab
export GITLAB_TOKEN=$(security find-generic-password -a ${USER} -s gitlab_token -w)

# Bazel
function bzlw {
  echo "Getting all workflows for $1"
  bzl query "kind(_cnab_workflow_wrapper, $1)"
}

function bzlt {
  echo "Getting all targets for $1"
  bzl query "kind(cnab_action_invocation, $1)"
}

function kubectlgetall {
  for i in $(kubectl api-resources --verbs=list --namespaced -o name | grep -v "events.events.k8s.io" | grep -v "events" | sort | uniq); do
    echo "Resource:" $i
    
    if [ -z "$1" ]
    then
        kubectl get --ignore-not-found ${i}
    else
        kubectl -n ${1} get --ignore-not-found ${i}
    fi
  done
}

# K8s
alias k="kubectl"
alias kall="kubectlgetall"

# Workspace
export WORKSPACE="$(echo $USER | sed s/\\.//g)"

function workspace {
  pkill workspaces; (workspaces proxy $WORKSPACE > /dev/null 2>&1 &) && kitty +kitten ssh workspace-$WORKSPACE
}

# Kitty ssh
alias s="kitty +kitten ssh"

# Set SSH_AUTH_SOCK to the launchd-managed ssh-agent socket (com.openssh.ssh-agent).
export SSH_AUTH_SOCK=$(launchctl asuser $(id -u) launchctl getenv SSH_AUTH_SOCK)

# Load SSH keys from the keychain if keychain is empty.
ssh-add -l > /dev/null || ssh-add --apple-load-keychain 2> /dev/null
